{"version":3,"sources":["logo.svg","MessageList.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","_","Message","props","msgRef","React","createRef","this","current","setAttribute","style","ref","message","Component","MessageList","state","data","btmDivRef","timerID","setInterval","updateMessages","scrollToBottom","scrollIntoView","behavior","objDiv","document","getElementById","scrollTop","scrollHeight","a","get","headers","response","isEqual","setState","console","error","ISOString","Date","toLocaleString","textAlign","className","id","listStyleType","map","datum","nickname","getReadableDate","timestamp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yOAAe,I,8ECITA,EAAQC,EAAQ,IAClBC,EAAID,EAAQ,IAIVE,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,OAASC,IAAMC,YAFH,E,qDAKnB,WACEC,KAAKH,OAAOI,QAAQC,aAAa,QAASF,KAAKJ,MAAMO,S,gCAGvD,WACEH,KAAKH,OAAOI,QAAQC,aAAa,QAASF,KAAKJ,MAAMO,S,oBAGvD,WACE,OACE,sBAAMC,IAAKJ,KAAKH,OAAhB,SAAyBG,KAAKJ,MAAMS,c,GAhBpBP,IAAMQ,WA4FbC,E,kDArEb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CAAEC,KAAM,IACrB,EAAKC,UAAYZ,IAAMC,YAHN,E,qDAMnB,WAAqB,IAAD,OAClBC,KAAKW,QAAUC,aAAY,kBAAM,EAAKC,mBAAkB,KACxDb,KAAKc,mB,gCAGP,WACEd,KAAKc,mB,4BAGP,WACEd,KAAKU,UAAUT,QAAQc,eAAe,CAACC,SAAU,WACjD,IAAMC,EAASC,SAASC,eAAe,QACvCF,EAAOG,UAAYH,EAAOI,e,mEAG5B,4BAAAC,EAAA,+EAE2B9B,EAAM+B,IAhDvB,oCAgDgC,CAAEC,QAAS,KAFrD,OAEUC,EAFV,OAGS/B,EAAEgC,QAAQD,EAAShB,KAAMT,KAAKQ,MAAMC,OACvCT,KAAK2B,SAAS,CACZlB,KAAMgB,EAAShB,OALvB,gDASImB,QAAQC,MAAR,MATJ,yD,mFAaA,SAAgBC,GAEd,OADW,IAAIC,KAAKD,GACRE,eAAe,W,oBAG7B,WAAU,IAAD,OACP,OACE,qCACA,sBAAK7B,MAAO,CAAC8B,UAAW,UAAxB,UACE,sCACA,iEAEA,qBAAKC,UAAU,OAAf,SACE,oBAAIA,UAAU,OAAOC,GAAG,OAAOhC,MAAO,CAACiC,cAAe,QAAtD,SACGpC,KAAKQ,MAAMC,KAAK4B,KAAI,SAACC,GAAD,OACnB,6BAGE,sBAAKJ,UAAU,gBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAIA,UAAU,WAAd,UAA6C,OAAnBI,EAAMC,SAAoB,QAAUD,EAAMC,SAApE,aACA,mBAAGL,UAAU,OAAb,SAAqB,EAAKM,gBAAgBF,EAAMG,gBAElD,cAAC,EAAD,CAAStC,MAAOmC,EAAMnC,MAAOE,QAASiC,EAAMjC,QAAS8B,GAAIG,EAAMH,SAP5DG,EAAMH,WAarB,qBAAK/B,IAAKJ,KAAKU,mB,GAhEKZ,IAAMQ,WCpBjBoC,MANf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,M","file":"static/js/main.12e8a080.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport Style from 'style-it';\r\nimport './MessageList.css';\r\n\r\nconst axios = require(\"axios\");\r\nvar _ = require('lodash')\r\n\r\nconst url = \"http://35.157.57.155:80/messages/\";\r\n\r\nclass Message extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.msgRef = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.msgRef.current.setAttribute('style', this.props.style);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.msgRef.current.setAttribute('style', this.props.style);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <span ref={this.msgRef}>{this.props.message}</span>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass MessageList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [] };\r\n    this.btmDivRef = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.updateMessages(), 1000);\r\n    this.scrollToBottom()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom()\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.btmDivRef.current.scrollIntoView({behavior: 'smooth'})\r\n    const objDiv = document.getElementById(\"list\");\r\n    objDiv.scrollTop = objDiv.scrollHeight;\r\n  }\r\n\r\n  async updateMessages() {\r\n    try {\r\n      const response = await axios.get(url, { headers: {} });\r\n      if (!_.isEqual(response.data, this.state.data)) {\r\n        this.setState({\r\n          data: response.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  getReadableDate(ISOString) {\r\n    let date = new Date(ISOString)\r\n    return date.toLocaleString(\"no-NO\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div style={{textAlign: \"center\"}}>\r\n        <h1>KIRC</h1>\r\n        <h6>Designed by Engineers &trade;</h6>\r\n      </div>\r\n        <div className=\"page\">\r\n          <ul className=\"list\" id=\"list\" style={{listStyleType: \"none\"}}>\r\n            {this.state.data.map((datum) => (\r\n              <li\r\n                key={datum.id}\r\n              >\r\n                <div className=\"speech-bubble\" >\r\n                  <div className=\"nickname-and-date\" >\r\n                    <h3 className=\"nickname\">{datum.nickname === null ? \"Guest\" : datum.nickname} sier: </h3>\r\n                    <p className=\"date\">{this.getReadableDate(datum.timestamp)}</p>\r\n                  </div>\r\n                  <Message style={datum.style} message={datum.message} id={datum.id}></Message>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      <div ref={this.btmDivRef}></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageList;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport MessageList from './MessageList'\n\n\nfunction App() {\n  return (\n    <MessageList />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}